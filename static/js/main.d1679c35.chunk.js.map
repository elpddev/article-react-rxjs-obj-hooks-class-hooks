{"version":3,"sources":["Calculator.jsx","CalculatorManager.jsx","App.js","reportWebVitals.js","index.js"],"names":["Calculator","onClear","onPercentage","onDevision","onMulti","onAdd","onSub","onEqual","onNumber","onDot","MainLayout","ResultPad","area","Button","type","onClick","oonClick","NumbersButtons","styled","div","display","gridTemplateAreas","gridArea","fontSize","height","background","border","boxShadow","button","backgroundColor","primary","secondary","highlight","fontWeight","color","cursor","textAlign","Array","fill","map","_","i","CalculatorManager","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAEO,SAASA,EAAT,GAUH,IATFC,EASC,EATDA,QACAC,EAQC,EARDA,aACAC,EAOC,EAPDA,WACAC,EAMC,EANDA,QACAC,EAKC,EALDA,MACAC,EAIC,EAJDA,MACAC,EAGC,EAHDA,QACAC,EAEC,EAFDA,SACAC,EACC,EADDA,MAGA,OACE,eAACC,EAAD,WACE,cAACC,EAAD,CAAWC,KAAK,WAEhB,cAACC,EAAD,CAAQD,KAAK,QAAQE,KAAK,UAAUC,QAASd,EAA7C,eACA,cAACY,EAAD,CAAQD,KAAK,aAAaE,KAAK,YAAYC,QAASb,EAApD,eAEA,cAACW,EAAD,CAAQD,KAAK,WAAWE,KAAK,YAAYC,QAASZ,EAAlD,eACA,cAACU,EAAD,CAAQD,KAAK,QAAQE,KAAK,YAAYE,SAAUZ,EAAhD,eACA,cAACS,EAAD,CAAQD,KAAK,MAAME,KAAK,YAAYE,SAAUV,EAA9C,eACA,cAACO,EAAD,CAAQD,KAAK,MAAME,KAAK,YAAYE,SAAUX,EAA9C,eACA,cAACQ,EAAD,CAAQD,KAAK,QAAQE,KAAK,YAAYE,SAAUT,EAAhD,eAEC,cAACU,EAAD,CAAgBT,SAAUA,IAE3B,cAACK,EAAD,CAAQD,KAAK,MAAME,KAAK,UAAUC,QAASN,EAA3C,kBAKN,IAAMC,EAAaQ,IAAOC,IAAI,CAC5BC,QAAS,OACTC,kBAAkB,wKAUdV,EAAYO,IAAOC,KAAI,YAC3B,MAAO,CACLG,SAFqC,EAAVV,KAG3BW,SAAU,QACVC,OAAQ,MACRC,WAAY,UACZC,OAAQ,oBACRC,UAAW,WAITd,EAASK,IAAOU,QAAO,YAAmB,IAAjBhB,EAAgB,EAAhBA,KAAME,EAAU,EAAVA,KAanC,MAAO,CACLe,gBAbsB,CACtBC,QAAS,iBAAM,0BACfC,UAAW,iBAAM,yBACjBC,UAAW,iBAAM,2BACjBlB,KAUAmB,WARiB,CACjBH,QAAS,iBAAM,UACfC,UAAW,iBAAM,WACjBC,UAAW,iBAAM,WACjBlB,KAKAQ,SAAUV,EACVc,OAAQ,oBACRQ,MAAO,UACPC,OAAQ,UACRC,UAAW,SACXb,SAAU,QACVC,OAAQ,UAIZ,SAASP,EAAT,GAAsC,IAAZT,EAAW,EAAXA,SACxB,OAAO6B,MAAM,IAAIC,KAAK,MAAMC,KAAI,SAACC,EAAGC,GAClC,OAAQ,cAAC5B,EAAD,CAAQD,KAAI,WAAM6B,GAAK3B,KAAK,UAAkBC,QAAS,kBAAMP,EAASiC,IAAtE,SAA2EA,GAAhCA,MCnFhD,SAASC,IACd,OAAQ,cAAC1C,EAAD,ICKK2C,MANf,WACE,OACE,cAACD,EAAD,KCQWE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d1679c35.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport function Calculator({\n  onClear,\n  onPercentage,\n  onDevision,\n  onMulti,\n  onAdd,\n  onSub,\n  onEqual,\n  onNumber,\n  onDot,\n}) {\n  \n  return (\n    <MainLayout>\n      <ResultPad area=\"result\" />\n\n      <Button area=\"clear\" type=\"primary\" onClick={onClear}>C</Button>\n      <Button area=\"percentage\" type=\"secondary\" onClick={onPercentage}>%</Button>\n\n      <Button area=\"devision\" type=\"highlight\" onClick={onDevision}>/</Button>\n      <Button area=\"multi\" type=\"highlight\" oonClick={onMulti}>*</Button>\n      <Button area=\"sub\" type=\"highlight\" oonClick={onSub}>-</Button>\n      <Button area=\"add\" type=\"highlight\" oonClick={onAdd}>+</Button>\n      <Button area=\"equal\" type=\"highlight\" oonClick={onEqual}>=</Button>\n\n      {<NumbersButtons onNumber={onNumber} />}\n      \n      <Button area=\"dot\" type=\"primary\" onClick={onDot}>.</Button>\n    </MainLayout>\n  );\n}\n\nconst MainLayout = styled.div({\n  display: 'grid',\n  gridTemplateAreas: `\n    \"result result result result\"\n    \"clear clear percentage devision\"\n    \"n7 n8 n9 multi\"\n    \"n4 n5 n6 sub\"\n    \"n1 n2 n3 add\"\n    \"n0 n0 dot equal\"\n  `,\n});\n\nconst ResultPad = styled.div(({area}) => {\n  return {\n    gridArea: area,\n    fontSize: '1.6em',\n    height: '5em',\n    background: '#2B2B2B',\n    border: '1px solid #414141',\n    boxShadow: 'none',\n  };\n});\n\nconst Button = styled.button(({area, type}) => {\n  const backgroundColor = {\n    primary: () => 'rgba(88, 88, 88, 0.75)',\n    secondary: () => 'rgba(17, 17, 17, 0.7)',\n    highlight: () => 'rgba(220, 140, 0, 0.7)',\n  }[type]();\n\n  const fontWeight = {\n    primary: () => 'normal',\n    secondary: () => 'lighter',\n    highlight: () => 'normal',\n  }[type]();\n\n  return {\n    backgroundColor,\n    fontWeight,\n    gridArea: area,\n    border: '1px solid #414141',\n    color: '#fdfdfd',\n    cursor: 'pointer',\n    textAlign: 'center',\n    fontSize: '1.6em',\n    height: '3em',\n  };\n});\n\nfunction NumbersButtons({ onNumber}) {\n  return Array(10).fill(null).map((_, i) => {\n    return (<Button area={`n${i}`} type=\"primary\" key={i} onClick={() => onNumber(i)}>{i}</Button>);\n  });\n}\n","import {Calculator} from './Calculator';\n\nexport function CalculatorManager() {\n  return (<Calculator />);\n}\n","import {CalculatorManager} from './CalculatorManager';\n\nfunction App() {\n  return (\n    <CalculatorManager />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}